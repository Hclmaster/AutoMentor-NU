{
  "1": {
    "pattern": {
      "request": {
        "inputMessage": {"reg":  "error|n't defined"},
        "sourceCode": null,
        "computerOutput": {"reg":  "expected a function .* but"}
      }
    },
    "diagnosis": "Students have problems calling function and passing correct parameters."
  },

  "2": {
    "pattern": {
      "request": {
        "inputMessage": {"reg":  "error|n't defined"},
        "sourceCode": null,
        "computerOutput": {"reg": "function ([^\\s]+)( is)? (?:not defined|undefined)", "pats": ["?x"]}
      }
    },
    "diagnosis": "Students should have basic skills to check whether they already defined the function before they call them."
  },

  "3": {
    "pattern": {
      "request": {
        "inputMessage": {"reg":  "error|n't defined"},
        "sourceCode": {"reg": "\\(([^\\s]+) \\(([^\\s]+)\\)", "pats": ["?x", "?y"]},
        "computerOutput": {"reg": "expected a function .* but"}
      }
    },
    "diagnosis": "Students have trouble understanding how to correctly pass arguments to function, and they should understand that when they put parenthesis around variable, this means function call."
  },

  "4": {
    "pattern": {
      "request": {
        "inputMessage": {"reg":  "error|n't defined"},
        "sourceCode": {"reg": "\\(([^\\s]+) [^\\(]+", "pats": ["?x"]},
        "computerOutput": {"reg": "([^\\s\\:]+)[:\\s].*variable.* not defined", "pats": ["?y"]}
      }
    },
    "diagnosis": "Students don't understand they should define function before call it, or they have typo of calling function in their code."
  },

  "5": {
    "pattern": {
      "request": {
        "inputMessage": {"reg": "error|n't defined"},
        "sourceCode": {"reg": "\\(([^\\s]+) [^\\(]+", "pats": ["?x"]},
        "computerOutput": {"reg": "expects only \\d+ arguments, but found \\d+"}
      }
    },
    "diagnosis": "Students aren't passing the correct number of arguments to function."
  },

  "6": {
    "pattern": {
      "request": {
        "inputMessage": {"reg": "error|n't defined"},
        "sourceCode": {"reg": "\\(([^\\s]+) [^\\(]+", "pats": ["?x"]},
        "computerOutput": {"reg": "expected a function .* but"}
      }
    },
    "diagnosis": "Students don't understand when to put parenthesis correctly."
  },

  "7": {
    "pattern": {
      "request": {
        "inputMessage": {"reg": "error|n't defined"},
        "sourceCode": null,
        "computerOutput": {"reg": "([^\\s]+): expects \\D+[\\d]*\\D+(?:given|but)", "pats": ["?x"]}
      }
    },
    "diagnosis": "Student is passing wrong type of arguments to the function."
  },

  "8": {
    "pattern": {
      "request": {
        "inputMessage": {"reg": "(confused|how .*? use|[W|w]hat(.*)?[is|to])"},
        "confusionInputs": {"some": {"reg":  "[W|w]hat [(is|does)] ?.* function ([^\\s]+)", "pats": ["?x"]}}
      }
    },
    "diagnosis": "Student is passing wrong type of arguments to the function."
  },

  "9": {
    "pattern": {
      "request": {
        "inputMessage": {"reg": "(confused|how .*? use|[W|w]hat(.*)?[is|to])|[D|d]o not know"},
        "confusionInputs": {"some": {"reg": "[W|w]hat.*to use.*to ([^?]+)", "pats": ["?x"]}}
      }
    },
    "diagnosis": "Student doesn't know this concept - ?x."
  },

  "10": {
    "pattern": {
      "request": {
        "inputMessage": {"reg": "(confused|how .*? use|[W|w]hat(.*)?[is|to])|[D|d]o not know"},
        "confusionInputs": {"some": {"reg": "the difference between (.*) and ([^\\?]+)", "pats": ["?x", "?y"]}}
      }
    },
    "diagnosis": "Student has trouble distinguish difference between concept ?x and ?y."
  },

  "11": {
    "pattern": {
      "request": {
        "inputMessage": {"reg": "(confused|how .*? use|[W|w]hat(.*)?[is|to])|[D|d]o not know"},
        "confusionInputs": null
      }
    },
    "diagnosis": "Can't diagnosis, students didn't give their confusion inputs."
  },

  "12": {
    "pattern": {
      "request": {
        "inputMessage": {"reg": "(H|h)ow (?:to|can|do).*|stuck|(S|s)tuck"},
        "stuckInput": {"reg": "[H|h]ow (?:to|can)+ ([^\\?]+)", "pats": ["?x"]},
        "sourceCode": null
      }
    },
    "diagnosis": "Student got stuck on the usage of ?x."
  },

  "13": {
    "pattern": {
      "request": {
        "inputMessage": {"reg": "(H|h)ow (?:to|can|do).*|stuck|(S|s)tuck"},
        "stuckInput": {"reg": "Stuck [in|at]+ (?:the)+ ([^\\s]+)", "pats": ["?x"]},
        "sourceCode": null
      }
    },
    "diagnosis": "Student got stuck of ?x."
  },

  "14": {
    "pattern": {
      "request": {
        "inputMessage": {"reg": "can't.*get.*work"},
        "sourceCode": {"reg": "\\(([^\\s]+) [^\\(]+", "pats": ["?x"]},
        "computerOutput": {"reg": "variable ([^\\s]+).*undefined", "pats": ["?y"]}
      }
    },
    "diagnosis": "Students don't know how to check and define variables in their code."
  },

  "15": {
    "pattern": {
      "request": {
        "inputMessage": {"reg": "(H|h)ow (?:to|can|do).*|stuck|(S|s)tuck"},
        "computerOutput": {"reg": "\\(\\)"},
        "expectedOutput": {"reg": "\\(.*\\)"}
      }
    },
    "diagnosis": "Students have problem with their code, it seems the output doesn't match against expected."
  },

  "16": {
    "pattern": {
      "request": {
        "inputMessage": {"reg": "cannot.*by ([^\\s\\.]+)", "pats": ["?x"]},
        "sourceCode": null
      }
    },
    "diagnosis": "Student stuck at doing ?x."
  },

  "17": {
    "pattern": {
      "request": {
        "inputMessage": {"reg": "error|n't defined"},
        "sourceCode": {"reg": "\\(([^\\s]+)"},
        "computerOutput": {"reg": "([^\\s]+): expects \\D+[\\d]*\\D+(?:given|but) \\(([^\\\\)]+)", "pats": ["?x", "?y"]}
      }
    },
    "diagnosis": "Student is passing wrong type of arguments to the function."
  },

  "18": {
    "pattern": {
      "request": {
        "inputMessage": {"reg": "error|n't defined"},
        "sourceCode": {"reg": "\\(([^\\s]+)"},
        "computerOutput": {"reg": "function ([^\\s]+).*not defined", "pats": ["?x"]}
      }
    },
    "diagnosis": "Student doesn't how to check undefined error of function call. And let them to take a look at ?x documentation."
  },

  "19": {
    "pattern": {
      "request": {
        "inputMessage": {"reg": "error|n't defined"},
        "sourceCode": {"reg": "\\(\\(.*\\)\\)"},
        "computerOutput": {"reg": "([^\\s]+):.*expected.*(?:given|but)"}
      }
    },
    "diagnosis": "Student doesn't understand what does parentheses mean in Racket. They should be able to distinguish it with function call."
  },

  "20": {
    "pattern": {
      "request": {
        "inputMessage": {"reg": "error|n't defined"},
        "sourceCode": {"reg": "\\(.*[^\\)]$"},
        "computerOutput": {"reg": "([^\\s]+): expected.*\\) to close \\("}
      }
    },
    "diagnosis": "Student doesn't know to read basic error message, and maybe they don't know how to define a function call."
  }
}
